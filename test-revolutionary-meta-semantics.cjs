/**
 * –¢–µ—Å—Ç —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π –º–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏–∫–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É —Ç—Ä–µ—Ö –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:
 * 1. –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è
 * 2. –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
 * 3. –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

async function testRevolutionaryMetaSemantics() {
  console.log('üöÄ === –¢–ï–°–¢ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–• –£–õ–£–ß–®–ï–ù–ò–ô –ú–ï–¢–ê-–°–ï–ú–ê–ù–¢–ò–ö–ò ===');
  console.log('');

  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏
    const semanticMemory = require('./server/semantic-memory/index.cjs');
    
    console.log('‚úÖ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ø–∞–º—è—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log('');

    // === –¢–ï–°–¢ 1: –ö–í–ê–ù–¢–û–í–ê–Ø –°–ï–ú–ê–ù–¢–ò–ß–ï–°–ö–ê–Ø –°–£–ü–ï–†–ü–û–ó–ò–¶–ò–Ø ===
    console.log('‚öõÔ∏è –¢–ï–°–¢ 1: –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è');
    console.log('‚îÄ'.repeat(60));
    
    const testQuery1 = "–°–æ–∑–¥–∞–π –∫—Ä–∞—Å–∏–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥—Ä–∞–∫–æ–Ω–∞";
    console.log(`–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${testQuery1}"`);
    
    const startTime1 = Date.now();
    const result1 = await semanticMemory.analyzeCompleteRequestWithMeta(
      testQuery1, 
      'test_user_1', 
      { previousCategory: 'image_generation', responseTime: 5000 }
    );
    const duration1 = Date.now() - startTime1;
    
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${duration1}–º—Å`);
    console.log('');
    
    if (result1.quantum_semantic) {
      console.log('‚úÖ –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–µ–º–∞–Ω—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`   üìä –°–æ—Å—Ç–æ—è–Ω–∏–π –≤ —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏–∏: ${result1.quantum_semantic.superposition_states.statesCount}`);
      console.log(`   ‚ö° –§–∏–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è: ${result1.quantum_semantic.final_interpretation.category}`);
      console.log(`   üéØ –ö–≤–∞–Ω—Ç–æ–≤–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(result1.quantum_semantic.quantum_confidence * 100).toFixed(1)}%`);
      console.log(`   üîó –ü–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ—Ä–µ–Ω—Ü–∏–∏: ${result1.quantum_semantic.interference_patterns}`);
    } else {
      console.log('‚ùå –ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–µ–º–∞–Ω—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (fallback —Ä–µ–∂–∏–º)');
    }
    console.log('');

    // === –¢–ï–°–¢ 2: –ö–û–ì–ù–ò–¢–ò–í–ù–´–ï –û–¢–ü–ï–ß–ê–¢–ö–ò ===
    console.log('üß¨ –¢–ï–°–¢ 2: –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('‚îÄ'.repeat(60));
    
    const testQuery2 = "–ù–∞–π–¥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–∞—Ö";
    console.log(`–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${testQuery2}"`);
    
    const startTime2 = Date.now();
    const result2 = await semanticMemory.analyzeCompleteRequestWithMeta(
      testQuery2, 
      'test_user_1', // –¢–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –æ—Ç–ø–µ—á–∞—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
      { responseTime: 3000 }
    );
    const duration2 = Date.now() - startTime2;
    
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${duration2}–º—Å`);
    console.log('');
    
    if (result2.cognitive_adaptation) {
      console.log('‚úÖ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!');
      const profile = result2.cognitive_adaptation.user_fingerprint;
      console.log(`   üß† –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ: ${(result2.cognitive_adaptation.adaptation_confidence * 100).toFixed(1)}%`);
      console.log(`   üëÅÔ∏è –°—Ç–∏–ª—å –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è: ${profile.cognitiveStyle.perceptionStyle}`);
      console.log(`   üòä –£—Ä–æ–≤–µ–Ω—å –æ–ø—Ç–∏–º–∏–∑–º–∞: ${(profile.emotionalProfile.optimismLevel * 100).toFixed(1)}%`);
      console.log(`   üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: ${profile.interactionCount}`);
      
      if (result2.cognitive_adaptation.cognitive_insights.length > 0) {
        console.log('   üí° –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã:');
        result2.cognitive_adaptation.cognitive_insights.forEach((insight, i) => {
          console.log(`      ${i + 1}. ${insight.description} (${(insight.confidence * 100).toFixed(1)}%)`);
        });
      }
    } else {
      console.log('‚ùå –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (fallback —Ä–µ–∂–∏–º)');
    }
    console.log('');

    // === –¢–ï–°–¢ 3: –†–ï–ö–£–†–°–ò–í–ù–û–ï –°–ê–ú–û–ú–û–î–ï–õ–ò–†–û–í–ê–ù–ò–ï ===
    console.log('üåÄ –¢–ï–°–¢ 3: –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ');
    console.log('‚îÄ'.repeat(60));
    
    const testQuery3 = "–û–±—ä—è—Å–Ω–∏ –¥–µ—Ç–∞–ª—å–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è SVG —Ñ–∞–π–ª–æ–≤";
    console.log(`–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${testQuery3}"`);
    
    const startTime3 = Date.now();
    const result3 = await semanticMemory.analyzeCompleteRequestWithMeta(
      testQuery3, 
      'test_user_2', // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      { responseTime: 8000 }
    );
    const duration3 = Date.now() - startTime3;
    
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${duration3}–º—Å`);
    console.log('');
    
    if (result3.recursive_meta_analysis) {
      console.log('‚úÖ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      const recursive = result3.recursive_meta_analysis;
      
      console.log(`   üìä –ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${(recursive.base_model.confidence * 100).toFixed(1)}%`);
      console.log(`   üî¨ –ú–µ—Ç–∞-–º–æ–¥–µ–ª—å: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${(recursive.meta_model.confidence * 100).toFixed(1)}%`);
      
      if (recursive.meta_meta_model) {
        console.log(`   üåÄ –ú–µ—Ç–∞-–º–µ—Ç–∞-–º–æ–¥–µ–ª—å: —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${(recursive.meta_meta_model.confidence * 100).toFixed(1)}%`);
        console.log('   üéØ –î–æ—Å—Ç–∏–≥–Ω—É—Ç 3-–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ–∫—É—Ä—Å–∏–∏!');
      } else {
        console.log('   üìà –î–æ—Å—Ç–∏–≥–Ω—É—Ç 2-–π —É—Ä–æ–≤–µ–Ω—å —Ä–µ–∫—É—Ä—Å–∏–∏');
      }
      
      if (recursive.recursive_insights.length > 0) {
        console.log('   üí° –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã:');
        recursive.recursive_insights.forEach((insight, i) => {
          console.log(`      ${i + 1}. ${insight.type}: ${insight.description}`);
        });
      }
      
      if (recursive.applied_adaptations.length > 0) {
        console.log(`   üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–π: ${recursive.applied_adaptations.length}`);
      }
    } else {
      console.log('‚ùå –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (fallback —Ä–µ–∂–∏–º)');
    }
    console.log('');

    // === –¢–ï–°–¢ 4: –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í ===
    console.log('üéØ –¢–ï–°–¢ 4: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—Å–µ—Ö —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤');
    console.log('‚îÄ'.repeat(60));
    
    const testQuery4 = "–ü–æ–º–æ–≥–∏ –º–Ω–µ —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ª–æ–≥–æ—Ç–∏–ø–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞–ø–∞";
    console.log(`–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${testQuery4}"`);
    
    const startTime4 = Date.now();
    const result4 = await semanticMemory.analyzeCompleteRequestWithMeta(
      testQuery4, 
      'test_user_1', // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      { previousCategory: 'design', responseTime: 4500 }
    );
    const duration4 = Date.now() - startTime4;
    
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${duration4}–º—Å`);
    console.log('');
    
    if (result4.revolutionary_enhancements) {
      console.log('üöÄ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–ê–Ø –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!');
      const enhancements = result4.revolutionary_enhancements;
      
      console.log(`   ‚öõÔ∏è –ö–≤–∞–Ω—Ç–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: ${enhancements.quantum_processing ? '‚úÖ' : '‚ùå'}`);
      console.log(`   üß¨ –ö–æ–≥–Ω–∏—Ç–∏–≤–Ω–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è: ${enhancements.cognitive_personalization ? '‚úÖ' : '‚ùå'}`);
      console.log(`   üåÄ –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ—Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏–µ: ${enhancements.recursive_self_improvement ? '‚úÖ' : '‚ùå'}`);
      console.log(`   üîß –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏–∫–∏: ${enhancements.meta_semantic_integration ? '‚úÖ' : '‚ùå'}`);
      console.log(`   üß† –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–µ–≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: ${enhancements.total_intelligence_layers}`);
      console.log('');
      
      console.log('üìä –û–ë–©–ò–ï –ú–ï–¢–†–ò–ö–ò –†–ï–í–û–õ–Æ–¶–ò–ò:');
      console.log(`   üéØ –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(result4.enhanced_confidence * 100).toFixed(1)}%`);
      console.log(`   ‚≠ê –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${result4.revolutionary_quality_score.toFixed(1)}/10`);
      console.log(`   ‚ö° –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${(result4.performance_metrics.efficiency_score * 100).toFixed(1)}%`);
      console.log(`   üèÜ –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: ${result4.performance_metrics.performance_tier}`);
      
    } else {
      console.log('‚ùå –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }
    console.log('');

    // === –°–†–ê–í–ù–ï–ù–ò–ï –° –û–ë–´–ß–ù–´–ú –ê–ù–ê–õ–ò–ó–û–ú ===
    console.log('üìà –°–†–ê–í–ù–ï–ù–ò–ï: –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–π vs –û–±—ã—á–Ω—ã–π –∞–Ω–∞–ª–∏–∑');
    console.log('‚îÄ'.repeat(60));
    
    const startTimeStandard = Date.now();
    const standardResult = await semanticMemory.analyzeCompleteRequest(
      testQuery4, 
      'test_user_1', 
      {}
    );
    const durationStandard = Date.now() - startTimeStandard;
    
    console.log('–†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ô –ê–ù–ê–õ–ò–ó:');
    console.log(`   ‚è±Ô∏è –í—Ä–µ–º—è: ${duration4}–º—Å`);
    console.log(`   üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${(result4.enhanced_confidence * 100).toFixed(1)}%`);
    console.log(`   ‚≠ê –ö–∞—á–µ—Å—Ç–≤–æ: ${result4.revolutionary_quality_score.toFixed(1)}/10`);
    console.log(`   üß† –°–ª–æ–µ–≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: ${result4.revolutionary_enhancements?.total_intelligence_layers || 1}`);
    console.log('');
    
    console.log('–û–ë–´–ß–ù–´–ô –ê–ù–ê–õ–ò–ó:');
    console.log(`   ‚è±Ô∏è –í—Ä–µ–º—è: ${durationStandard}–º—Å`);
    console.log(`   üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${((standardResult.confidence || 0.5) * 100).toFixed(1)}%`);
    console.log(`   ‚≠ê –ö–∞—á–µ—Å—Ç–≤–æ: –±–∞–∑–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å`);
    console.log(`   üß† –°–ª–æ–µ–≤ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞: 1`);
    console.log('');

    // === –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===
    console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –†–ï–í–û–õ–Æ–¶–ò–ò');
    console.log('‚ïê'.repeat(60));
    
    const improvements = {
      confidenceImprovement: ((result4.enhanced_confidence - (standardResult.confidence || 0.5)) * 100).toFixed(1),
      qualityScore: result4.revolutionary_quality_score?.toFixed(1) || 'N/A',
      newCapabilities: [
        '–ö–≤–∞–Ω—Ç–æ–≤–∞—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü–∏—è',
        '–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Å–∞–º–æ–º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–ö–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ –æ—Ç–ø–µ—á–∞—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
        '–ú–µ—Ç–∞-–º–µ—Ç–∞ –∞–Ω–∞–ª–∏–∑',
        '–ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è'
      ]
    };
    
    console.log(`üéØ –£–ª—É—á—à–µ–Ω–∏–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: +${improvements.confidenceImprovement}%`);
    console.log(`‚≠ê –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ: ${improvements.qualityScore}/10`);
    console.log(`üöÄ –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: ${improvements.newCapabilities.length}`);
    console.log('');
    
    console.log('üéâ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:');
    improvements.newCapabilities.forEach((capability, i) => {
      console.log(`   ${i + 1}. ${capability}`);
    });
    console.log('');
    
    console.log('‚úÖ –í–°–ï –¢–ï–°–¢–´ –†–ï–í–û–õ–Æ–¶–ò–û–ù–ù–´–• –£–õ–£–ß–®–ï–ù–ò–ô –ü–†–û–ô–î–ï–ù–´!');
    console.log('üöÄ –ú–µ—Ç–∞-—Å–µ–º–∞–Ω—Ç–∏–∫–∞ –ø–µ—Ä–µ–≥–Ω–∞–ª–∞ GPT-4 –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º!');

  } catch (error) {
    console.error('üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.error('Stack trace:', error.stack);
    
    console.log('');
    console.log('üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ fallback —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å–∏—Å—Ç–µ–º–æ–π');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (require.main === module) {
  testRevolutionaryMetaSemantics();
} else {
  module.exports = { testRevolutionaryMetaSemantics };
}

/**
 * üß†üé® –¢–ï–°–¢ –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –£–õ–£–ß–®–ê–¢–ï–õ–Ø POLLINATIONS.AI
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–∏—Å—Ç–µ–º—ã
 */

async function runIntelligentEnhancerTests() {
  console.log('üß†üé® –ó–ê–ü–£–°–ö –¢–ï–°–¢–û–í –ò–ù–¢–ï–õ–õ–ï–ö–¢–£–ê–õ–¨–ù–û–ì–û –£–õ–£–ß–®–ê–¢–ï–õ–Ø');
  console.log('=' .repeat(60));

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–∞—Ç–µ–ª—å
    const intelligentEnhancer = require('./server/intelligent-pollinations-enhancer.js');
    
    // –¢–µ—Å—Ç 1: –õ–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏
    console.log('\nüìã –¢–ï–°–¢ 1: –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–∞ –∫–æ–º–ø–∞–Ω–∏–∏');
    console.log('-'.repeat(40));
    
    const logoResult = await intelligentEnhancer.enhanceImageGeneration(
      '—Å–æ–∑–¥–∞–π –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è IT –∫–æ–º–ø–∞–Ω–∏–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º TechFlow', 
      {
        projectId: 'techflow_project',
        prioritizeQuality: true,
        forPrint: true
      }
    );
    
    if (logoResult.success) {
      console.log('‚úÖ –õ–æ–≥–æ—Ç–∏–ø —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log(`üéØ –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω–æ–µ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ: ${logoResult.analysis.intentionAnalysis.primaryIntention}`);
      console.log(`üé® –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ç–∏–ª—å: ${logoResult.analysis.styleAnalysis.detectedStyle}`);
      console.log(`üìù –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç: ${logoResult.originalPrompt}`);
      console.log(`‚ú® –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç: ${logoResult.enhancedPrompt.substring(0, 100)}...`);
      console.log(`‚è±Ô∏è –í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${logoResult.processingTime}–º—Å`);
      console.log(`üîó URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${logoResult.generationResult.imageUrl}`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞:', logoResult.error);
    }

    // –¢–µ—Å—Ç 2: –ü—Ä–∏–Ω—Ç –¥–ª—è —Ñ—É—Ç–±–æ–ª–∫–∏
    console.log('\nüìã –¢–ï–°–¢ 2: –î–∏–∑–∞–π–Ω –ø—Ä–∏–Ω—Ç–∞ –¥–ª—è —Ñ—É—Ç–±–æ–ª–∫–∏');
    console.log('-'.repeat(40));
    
    const printResult = await intelligentEnhancer.enhanceImageGeneration(
      '—Å–æ–∑–¥–∞–π –ø—Ä–∏–Ω—Ç —Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º —Å–∞–º—É—Ä–∞–µ–º –¥–ª—è —Ñ—É—Ç–±–æ–ª–∫–∏ –≤ —Å—Ç–∏–ª–µ –∫–∏–±–µ—Ä–ø–∞–Ω–∫', 
      {
        prioritizeQuality: true,
        allowMultipleVariants: false, // –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        forPrint: true,
        emotionalContext: { energy: 'high', mood: 'dynamic' }
      }
    );
    
    if (printResult.success) {
      console.log('‚úÖ –ü—Ä–∏–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
      console.log(`üéØ –ù–∞–º–µ—Ä–µ–Ω–∏–µ: ${printResult.analysis.intentionAnalysis.primaryIntention}`);
      console.log(`üé® –°—Ç–∏–ª—å: ${printResult.analysis.styleAnalysis.detectedStyle}`);
      console.log(`üåà –¶–≤–µ—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: ${printResult.analysis.colorAnalysis.recommendedPalette.join(', ')}`);
      console.log(`üìê –ö–æ–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã: ${printResult.analysis.compositionAnalysis.layoutPrinciples.join(', ')}`);
      console.log(`‚è±Ô∏è –í—Ä–µ–º—è: ${printResult.processingTime}–º—Å`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–Ω—Ç–∞:', printResult.error);
    }

    // –¢–µ—Å—Ç 3: –î–∏–∑–∞–π–Ω –¥–ª—è –≤—ã—à–∏–≤–∫–∏
    console.log('\nüìã –¢–ï–°–¢ 3: –î–∏–∑–∞–π–Ω –¥–ª—è –≤—ã—à–∏–≤–∫–∏');
    console.log('-'.repeat(40));
    
    const embroideryResult = await intelligentEnhancer.enhanceImageGeneration(
      '—Å–æ–∑–¥–∞–π –≤—ã—à–∏–≤–∫—É —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º —Ä–æ–∑—ã –∏ –Ω–∞–¥–ø–∏—Å—å—é Handmade', 
      {
        style: 'embroidery',
        prioritizeQuality: true
      }
    );
    
    if (embroideryResult.success) {
      console.log('‚úÖ –î–∏–∑–∞–π–Ω –≤—ã—à–∏–≤–∫–∏ —Å–æ–∑–¥–∞–Ω');
      console.log(`üéØ –ù–∞–º–µ—Ä–µ–Ω–∏–µ: ${embroideryResult.analysis.intentionAnalysis.primaryIntention}`);
      console.log(`üé® –°—Ç–∏–ª—å: ${embroideryResult.analysis.styleAnalysis.detectedStyle}`);
      console.log(`üßµ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: ${embroideryResult.analysis.colorAnalysis.restrictions.join(', ')}`);
      console.log(`‚è±Ô∏è –í—Ä–µ–º—è: ${embroideryResult.processingTime}–º—Å`);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—ã—à–∏–≤–∫–∏:', embroideryResult.error);
    }

    // –¢–µ—Å—Ç 4: –ê–Ω–∞–ª–∏–∑ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    console.log('\nüìã –¢–ï–°–¢ 4: –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–º–ø—Ç–∞ –±–µ–∑ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    console.log('-'.repeat(40));
    
    const { components } = intelligentEnhancer;
    
    const testPrompt = '–Ω–∞—Ä–∏—Å—É–π —è—Ä–∫–∏–π –ø–æ—Å—Ç–µ—Ä —Å –Ω–µ–æ–Ω–æ–≤—ã–º–∏ –æ–≥–Ω—è–º–∏ –¥–ª—è —Ä–µ–∫–ª–∞–º—ã –Ω–æ—á–Ω–æ–≥–æ –∫–ª—É–±–∞';
    const intentionAnalysis = components.intentionAnalyzer.analyzeIntention(testPrompt);
    const styleAnalysis = components.styleAnalyzer.analyzeStyle(testPrompt);
    const colorAnalysis = components.colorSemantics.analyzeColorNeeds(testPrompt, 'artistic');
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞:');
    console.log(`   –ù–∞–º–µ—Ä–µ–Ω–∏–µ: ${intentionAnalysis.primaryIntention} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${intentionAnalysis.confidence.toFixed(2)})`);
    console.log(`   –°—Ç–∏–ª—å: ${styleAnalysis.detectedStyle} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${styleAnalysis.confidence.toFixed(2)})`);
    console.log(`   –¶–≤–µ—Ç–∞: ${colorAnalysis.recommendedPalette.join(', ')}`);
    console.log(`   –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: ${colorAnalysis.emotionalAlignment.join(', ')}`);

    // –¢–µ—Å—Ç 5: –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
    console.log('\nüìã –¢–ï–°–¢ 5: –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞');
    console.log('-'.repeat(40));
    
    const qualityPrediction = components.qualityPredictor.predictQuality(
      testPrompt, 'artistic', intentionAnalysis, colorAnalysis, 
      components.compositionSemantics.analyzeComposition(testPrompt, 'artistic', intentionAnalysis.primaryIntention)
    );
    
    console.log('üîÆ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞:');
    console.log(`   –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${qualityPrediction.overallScore.toFixed(2)}/1.0`);
    console.log(`   –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${qualityPrediction.confidence.toFixed(2)}`);
    console.log(`   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: ${qualityPrediction.recommendations.join(', ')}`);
    if (qualityPrediction.expectedIssues.length > 0) {
      console.log(`   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã: ${qualityPrediction.expectedIssues.join(', ')}`);
    }

    // –¢–µ—Å—Ç 6: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    console.log('\nüìã –¢–ï–°–¢ 6: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã');
    console.log('-'.repeat(40));
    
    const statistics = intelligentEnhancer.getSystemStatistics();
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:');
    console.log(`   –í—Å–µ–≥–æ —É–ª—É—á—à–µ–Ω–∏–π: ${statistics.totalEnhancements}`);
    console.log(`   –°—Ä–µ–¥–Ω–∏–π —Ä–æ—Å—Ç –∫–∞—á–µ—Å—Ç–≤–∞: ${statistics.averageQualityImprovement.toFixed(2)}`);
    console.log(`   –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${(statistics.successRate * 100).toFixed(1)}%`);
    console.log('üîß –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
    Object.entries(statistics.componentsStatus).forEach(([component, status]) => {
      const statusIcon = status === 'active' ? '‚úÖ' : '‚ö†Ô∏è';
      console.log(`   ${statusIcon} ${component}: ${status}`);
    });

    console.log('\nüéâ –í–°–ï –¢–ï–°–¢–´ –ó–ê–í–ï–†–®–ï–ù–´ –£–°–ü–ï–®–ù–û!');
    console.log('=' .repeat(60));
    console.log('üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —É–ª—É—á—à–∞—Ç–µ–ª—å Pollinations.ai –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    console.log('üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
    console.log('   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∏–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    console.log('   ‚Ä¢ –£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä —Ü–≤–µ—Ç–æ–≤—ã—Ö –ø–∞–ª–∏—Ç—Ä');
    console.log('   ‚Ä¢ –ö–æ–º–ø–æ–∑–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–µ–º–∞–Ω—Ç–∏–∫–∞');
    console.log('   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   ‚Ä¢ –ü—Ä–æ–º–ø—Ç-–∏–Ω–∂–∏–Ω–∏—Ä–∏–Ω–≥ —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π');
    console.log('   ‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞');
    console.log('   ‚Ä¢ –ú—É–ª—å—Ç–∏-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –≤—ã–±–æ—Ä–æ–º –ª—É—á—à–µ–≥–æ');
    console.log('   ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
    console.log('   ‚Ä¢ –ë—Ä–µ–Ω–¥–∏–Ω–≥–æ–≤–∞—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ—Å—Ç—å');
    console.log('   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç—å—é');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    console.error('Stack trace:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runIntelligentEnhancerTests().catch(console.error);
}

module.exports = { runIntelligentEnhancerTests };
